rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the document belongs to the current user
    function isOwner() {
      return request.auth.uid == resource.data.userId;
    }
    
    // Songs collection rules
    match /songs/{songId} {
      allow read: if isAuthenticated() && isOwner();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && isOwner();
    }
    
    // Practice sessions collection rules
    match /sessions/{sessionId} {
      allow read: if isAuthenticated() && isOwner();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && isOwner();
    }
    
    // Set lists collection rules
    match /setLists/{setListId} {
      allow read: if isAuthenticated() && isOwner();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && isOwner();
    }
    
    // User profiles collection rules
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}